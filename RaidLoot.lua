local GlobalAddonName, ExRT = ...

local module = ExRT.mod:New("RaidLoot",ExRT.L.sooitems)
module.db.base = {}
--> module.db.base[X] = {[1] = name, [2] = boss names, [3] = loot, [4] = tokens}

--------> t15 ToT
module.db.base[1] = {
--> name
ExRT.L.sooitemst15,
--> bosses
{[1] = ExRT.L.sooitemstotboss1, [2] = ExRT.L.sooitemstotboss2, [3] = ExRT.L.sooitemstotboss3, [4] = ExRT.L.sooitemstotboss4, [5] = ExRT.L.sooitemstotboss5, [6] = ExRT.L.sooitemstotboss6, [7] = ExRT.L.sooitemstotboss7, [8] = ExRT.L.sooitemstotboss8, [9] = ExRT.L.sooitemstotboss9, [10] = ExRT.L.sooitemstotboss10, [11] = ExRT.L.sooitemstotboss11, [12] = ExRT.L.sooitemstotboss12, [13] = ExRT.L.sooitemstotboss13, [14] = ExRT.L.sooitemstrash, [15] = ExRT.L.sooitemssets},
--> loot
[[
local module = GExRTRaidLootGlobal
module.db.base[1][3] = {
[1] = {{[502]=95640,[522]=94730,[528]=96012,[535]=96384,[541]=96756},{[502]=95632,[522]=94722,[528]=96004,[535]=96376,[541]=96748},{[502]=95626,[522]=94724,[528]=95998,[535]=96370,[541]=96742},{[502]=95628,[522]=94725,[528]=96000,[535]=96372,[541]=96744},{[502]=95636,[522]=94733,[528]=96008,[535]=96380,[541]=96752},{[502]=95639,[522]=94735,[528]=96011,[535]=96383,[541]=96755},{[502]=95630,[522]=94723,[528]=96002,[535]=96374,[541]=96746},{[502]=95644,[522]=94734,[528]=96016,[535]=96388,[541]=96760},{[502]=95637,[522]=94731,[528]=96009,[535]=96381,[541]=96753},{[502]=95642,[522]=94732,[528]=96014,[535]=96386,[541]=96758},{[502]=95631,[522]=94727,[528]=96003,[535]=96375,[541]=96747},{[502]=95634,[522]=94737,[528]=96006,[535]=96378,[541]=96750},{[502]=95629,[522]=94726,[528]=96001,[535]=96373,[541]=96745},{[502]=95627,[522]=94728,[528]=95999,[535]=96371,[541]=96743},{[502]=95635,[522]=94739,[528]=96007,[535]=96379,[541]=96751},{[502]=95643,[522]=94736,[528]=96015,[535]=96387,[541]=96759},{[502]=95624,[522]=95510,[528]=95996,[535]=96368,[541]=96740},{[502]=95633,[522]=94729,[528]=96005,[535]=96377,[541]=96749},{[502]=95638,[522]=94738,[528]=96010,[535]=96382,[541]=96754},{[502]=95625,[522]=94512,[528]=95997,[535]=96369,[541]=96741}},
[2] = {{[502]=95657,[522]=94749,[528]=96029,[535]=96401,[541]=96773},{[502]=95647,[522]=94740,[528]=96019,[535]=96391,[541]=96763},{[502]=95660,[522]=94755,[528]=96032,[535]=96404,[541]=96776},{[502]=95652,[522]=94744,[528]=96024,[535]=96396,[541]=96768},{[502]=95655,[522]=94752,[528]=96027,[535]=96399,[541]=96771},{[502]=95646,[522]=94746,[528]=96018,[535]=96390,[541]=96762},{[502]=95658,[522]=94754,[528]=96030,[535]=96402,[541]=96774},{[502]=95662,[522]=94753,[528]=96034,[535]=96406,[541]=96778},{[502]=95645,[522]=94748,[528]=96017,[535]=96389,[541]=96761},{[502]=95653,[522]=94745,[528]=96025,[535]=96397,[541]=96769},{[502]=95649,[522]=94741,[528]=96021,[535]=96393,[541]=96765},{[502]=95650,[522]=94742,[528]=96022,[535]=96394,[541]=96766},{[502]=95664,[522]=94751,[528]=96036,[535]=96408,[541]=96780},{[502]=95648,[522]=94743,[528]=96020,[535]=96392,[541]=96764},{[502]=95656,[522]=94750,[528]=96028,[535]=96400,[541]=96772},{[502]=95661,[522]=94756,[528]=96033,[535]=96405,[541]=96777},{[502]=95663,[522]=94975,[528]=96035,[535]=96407,[541]=96779},{[502]=95651,[522]=94747,[528]=96023,[535]=96395,[541]=96767},{[502]=95659,[522]=95514,[528]=96031,[535]=96403,[541]=96775},{[502]=95654,[522]=94526,[528]=96026,[535]=96398,[541]=96770},{[502]=95641,[522]=94514,[528]=96013,[535]=96385,[541]=96757}},
[3] = {{[502]=95856,[522]=95575,[535]=96600},{[502]=95857,[522]=95580,[535]=96601},{[502]=95855,[522]=95570,[535]=96599},{[502]=95675,[522]=94758,[528]=96047,[535]=96419,[541]=96791},{[502]=95670,[522]=94760,[528]=96042,[535]=96414,[541]=96786},{[502]=95666,[522]=94759,[528]=96038,[535]=96410,[541]=96782},{[502]=95672,[522]=94763,[528]=96044,[535]=96416,[541]=96788},{[502]=95676,[522]=94766,[528]=96048,[535]=96420,[541]=96792},{[502]=95668,[522]=94761,[528]=96040,[535]=96412,[541]=96784},{[502]=95671,[522]=94765,[528]=96043,[535]=96415,[541]=96787},{[502]=95674,[522]=94764,[528]=96046,[535]=96418,[541]=96790},{[502]=95673,[522]=94767,[528]=96045,[535]=96417,[541]=96789},{[502]=95667,[522]=94762,[528]=96039,[535]=96411,[541]=96783},{[502]=95665,[522]=94523,[528]=96037,[535]=96409,[541]=96781},{[502]=95669,[522]=94513,[528]=96041,[535]=96413,[541]=96785},{[502]=95677,[522]=94516,[528]=96049,[535]=96421,[541]=96793}},
[4] = {{[502]=95686,[522]=94768,[528]=96058,[535]=96430,[541]=96802},{[502]=95678,[522]=94769,[528]=96050,[535]=96422,[541]=96794},{[502]=95692,[522]=94778,[528]=96064,[535]=96436,[541]=96808},{[502]=95689,[522]=94782,[528]=96061,[535]=96433,[541]=96805},{[502]=95685,[522]=94776,[528]=96057,[535]=96429,[541]=96801},{[502]=95695,[522]=94783,[528]=96067,[535]=96439,[541]=96811},{[502]=95683,[522]=94773,[528]=96055,[535]=96427,[541]=96799},{[502]=95691,[522]=94785,[528]=96063,[535]=96435,[541]=96807},{[502]=95687,[522]=94774,[528]=96059,[535]=96431,[541]=96803},{[502]=95679,[522]=94770,[528]=96051,[535]=96423,[541]=96795},{[502]=95694,[522]=94779,[528]=96066,[535]=96438,[541]=96810},{[502]=95688,[522]=94781,[528]=96060,[535]=96432,[541]=96804},{[502]=95693,[522]=94786,[528]=96065,[535]=96437,[541]=96809},{[502]=95681,[522]=94775,[528]=96053,[535]=96425,[541]=96797},{[502]=95684,[522]=94771,[528]=96056,[535]=96428,[541]=96800},{[502]=95680,[522]=94777,[528]=96052,[535]=96424,[541]=96796},{[502]=95697,[522]=94787,[528]=96069,[535]=96441,[541]=96813},{[502]=95690,[522]=94780,[528]=96062,[535]=96434,[541]=96806},{[502]=95696,[522]=94784,[528]=96068,[535]=96440,[541]=96812},{[502]=95682,[522]=94772,[528]=96054,[535]=96426,[541]=96798}},
[5] = {{[502]=95698,[522]=94788,[528]=96070,[535]=96442,[541]=96814},{[502]=95710,[522]=94796,[528]=96082,[535]=96454,[541]=96826},{[502]=95713,[522]=94800,[528]=96085,[535]=96457,[541]=96829},{[502]=95705,[522]=94793,[528]=96077,[535]=96449,[541]=96821},{[502]=95709,[522]=94803,[528]=96081,[535]=96453,[541]=96825},{[502]=95699,[522]=94794,[528]=96071,[535]=96443,[541]=96815},{[502]=95707,[522]=94801,[528]=96079,[535]=96451,[541]=96823},{[502]=95700,[522]=94791,[528]=96072,[535]=96444,[541]=96816},{[502]=95715,[522]=94797,[528]=96087,[535]=96459,[541]=96831},{[502]=95703,[522]=94789,[528]=96075,[535]=96447,[541]=96819},{[502]=95708,[522]=94804,[528]=96080,[535]=96452,[541]=96824},{[502]=95701,[522]=94790,[528]=96073,[535]=96445,[541]=96817},{[502]=95702,[522]=94792,[528]=96074,[535]=96446,[541]=96818},{[502]=95714,[522]=94802,[528]=96086,[535]=96458,[541]=96830},{[502]=95716,[522]=94798,[528]=96088,[535]=96460,[541]=96832},{[502]=95706,[522]=94799,[528]=96078,[535]=96450,[541]=96822},{[502]=95704,[522]=94795,[528]=96076,[535]=96448,[541]=96820},{[502]=95711,[522]=94521,[528]=96083,[535]=96455,[541]=96827},{[502]=95712,[522]=94520,[528]=96084,[535]=96456,[541]=96828}},
[6] = {{[502]=95888,[522]=95576,[535]=96632},{[502]=95889,[522]=95581,[535]=96633},{[502]=95887,[522]=95572,[535]=96631},{[502]=95720,[522]=94805,[528]=96092,[535]=96464,[541]=96836},{[502]=95723,[522]=94809,[528]=96095,[535]=96467,[541]=96839},{[502]=95717,[522]=94812,[528]=96089,[535]=96461,[541]=96833},{[502]=95724,[522]=94810,[528]=96096,[535]=96468,[541]=96840},{[502]=95719,[522]=94806,[528]=96091,[535]=96463,[541]=96835},{[502]=95725,[522]=94807,[528]=96097,[535]=96469,[541]=96841},{[502]=95722,[522]=94808,[528]=96094,[535]=96466,[541]=96838},{[502]=95721,[522]=94811,[528]=96093,[535]=96465,[541]=96837},{[502]=95718,[522]=94813,[528]=96090,[535]=96462,[541]=96834},{[502]=95726,[522]=94515,[528]=96098,[535]=96470,[541]=96842},{[502]=95727,[522]=94527,[528]=96099,[535]=96471,[541]=96843}},
[7] = {{[502]=95743,[522]=94922,[528]=96115,[535]=96487,[541]=96859},{[502]=95728,[522]=94814,[528]=96100,[535]=96472,[541]=96844},{[502]=95740,[522]=94928,[528]=96112,[535]=96484,[541]=96856},{[502]=95741,[522]=94929,[528]=96113,[535]=96485,[541]=96857},{[502]=95736,[522]=94822,[528]=96108,[535]=96480,[541]=96852},{[502]=95731,[522]=94818,[528]=96103,[535]=96475,[541]=96847},{[502]=95745,[522]=94926,[528]=96117,[535]=96489,[541]=96861},{[502]=95732,[522]=94820,[528]=96104,[535]=96476,[541]=96848},{[502]=95738,[522]=94925,[528]=96110,[535]=96482,[541]=96854},{[502]=95735,[522]=94821,[528]=96107,[535]=96479,[541]=96851},{[502]=95746,[522]=94924,[528]=96118,[535]=96490,[541]=96862},{[502]=95730,[522]=94819,[528]=96102,[535]=96474,[541]=96846},{[502]=95729,[522]=94816,[528]=96101,[535]=96473,[541]=96845},{[502]=95747,[522]=94930,[528]=96119,[535]=96491,[541]=96863},{[502]=95733,[522]=94815,[528]=96105,[535]=96477,[541]=96849},{[502]=95739,[522]=94923,[528]=96111,[535]=96483,[541]=96855},{[502]=95734,[522]=94817,[528]=96106,[535]=96478,[541]=96850},{[502]=95744,[522]=94927,[528]=96116,[535]=96488,[541]=96860},{[502]=95737,[522]=95511,[528]=96109,[535]=96481,[541]=96853},{[502]=95742,[522]=94931,[528]=96114,[535]=96486,[541]=96858}},
[8] = {{[502]=95758,[522]=94937,[528]=96130,[535]=96502,[541]=96874},{[502]=95768,[522]=94945,[528]=96140,[535]=96512,[541]=96884},{[502]=95765,[522]=94949,[528]=96137,[535]=96509,[541]=96881},{[502]=95754,[522]=94941,[528]=96126,[535]=96498,[541]=96870},{[502]=95767,[522]=94950,[528]=96139,[535]=96511,[541]=96883},{[502]=95755,[522]=94942,[528]=96127,[535]=96499,[541]=96871},{[502]=95759,[522]=94951,[528]=96131,[535]=96503,[541]=96875},{[502]=95766,[522]=94952,[528]=96138,[535]=96510,[541]=96882},{[502]=95750,[522]=94940,[528]=96122,[535]=96494,[541]=96866},{[502]=95762,[522]=94948,[528]=96134,[535]=96506,[541]=96878},{[502]=95751,[522]=94943,[528]=96123,[535]=96495,[541]=96867},{[502]=95752,[522]=94938,[528]=96124,[535]=96496,[541]=96868},{[502]=95749,[522]=94939,[528]=96121,[535]=96493,[541]=96865},{[502]=95760,[522]=94947,[528]=96132,[535]=96504,[541]=96876},{[502]=95753,[522]=94944,[528]=96125,[535]=96497,[541]=96869},{[502]=95761,[522]=94953,[528]=96133,[535]=96505,[541]=96877},{[502]=95764,[522]=94946,[528]=96136,[535]=96508,[541]=96880},{[502]=95756,[522]=95513,[528]=96128,[535]=96500,[541]=96872},{[502]=95748,[522]=94522,[528]=96120,[535]=96492,[541]=96864},{[502]=95757,[522]=94519,[528]=96129,[535]=96501,[541]=96873},{[502]=95763,[522]=94525,[528]=96135,[535]=96507,[541]=96879}},
[9] = {{[502]=95823,[522]=95574,[535]=96567},{[502]=95824,[522]=95579,[535]=96568},{[502]=95822,[522]=95569,[535]=96566},{[502]=95774,[522]=94955,[528]=96146,[535]=96518,[541]=96890},{[502]=95770,[522]=94954,[528]=96142,[535]=96514,[541]=96886},{[502]=95771,[522]=94959,[528]=96143,[535]=96515,[541]=96887},{[502]=95778,[522]=94958,[528]=96150,[535]=96522,[541]=96894},{[502]=95773,[522]=94960,[528]=96145,[535]=96517,[541]=96889},{[502]=95776,[522]=94957,[528]=96148,[535]=96520,[541]=96892},{[502]=95777,[522]=94956,[528]=96149,[535]=96521,[541]=96893},{[502]=95775,[522]=94962,[528]=96147,[535]=96519,[541]=96891},{[502]=95769,[522]=94961,[528]=96141,[535]=96513,[541]=96885},{[502]=95772,[522]=94531,[528]=96144,[535]=96516,[541]=96888},{[502]=95779,[522]=94518,[528]=96151,[535]=96523,[541]=96895}},
[10] = {{[502]=95957,[522]=95583,[535]=96701},{[502]=95956,[522]=95578,[535]=96700},{[502]=95955,[522]=95573,[535]=96699},{[502]=95780,[522]=94971,[528]=96152,[535]=96524,[541]=96896},{[502]=95790,[522]=94964,[528]=96162,[535]=96534,[541]=96906},{[502]=95781,[522]=94963,[528]=96153,[535]=96525,[541]=96897},{[502]=95786,[522]=94965,[528]=96158,[535]=96530,[541]=96902},{[502]=95788,[522]=94969,[528]=96160,[535]=96532,[541]=96904},{[502]=95789,[522]=94972,[528]=96161,[535]=96533,[541]=96905},{[502]=95782,[522]=94970,[528]=96154,[535]=96526,[541]=96898},{[502]=95783,[522]=94966,[528]=96155,[535]=96527,[541]=96899},{[502]=95784,[522]=94968,[528]=96156,[535]=96528,[541]=96900},{[502]=95787,[522]=94967,[528]=96159,[535]=96531,[541]=96903},{[502]=95785,[522]=95512,[528]=96157,[535]=96529,[541]=96901}},
[11] = {{[502]=95880,[522]=95577,[535]=96624},{[502]=95881,[522]=95582,[535]=96625},{[502]=95879,[522]=95571,[535]=96623},{[502]=95795,[522]=94974,[528]=96167,[535]=96539,[541]=96911},{[502]=95791,[522]=94973,[528]=96163,[535]=96535,[541]=96907},{[502]=95794,[522]=95515,[528]=96166,[535]=96538,[541]=96910},{[502]=95793,[522]=94980,[528]=96165,[535]=96537,[541]=96909},{[502]=95800,[522]=94981,[528]=96172,[535]=96544,[541]=96916},{[502]=95792,[522]=94977,[528]=96164,[535]=96536,[541]=96908},{[502]=95796,[522]=94979,[528]=96168,[535]=96540,[541]=96912},{[502]=95801,[522]=94757,[528]=96173,[535]=96545,[541]=96917},{[502]=95797,[522]=94978,[528]=96169,[535]=96541,[541]=96913},{[502]=95798,[522]=94976,[528]=96170,[535]=96542,[541]=96914},{[502]=95799,[522]=94529,[528]=96171,[535]=96543,[541]=96915}},
[12] = {{[502]=95809,[522]=94982,[528]=96181,[535]=96553,[541]=96925},{[502]=95803,[522]=94983,[528]=96175,[535]=96547,[541]=96919},{[502]=95815,[522]=94988,[528]=96187,[535]=96559,[541]=96931},{[502]=95810,[522]=95472,[528]=96182,[535]=96554,[541]=96926},{[502]=95818,[522]=95473,[528]=96190,[535]=96562,[541]=96934},{[502]=95806,[522]=94984,[528]=96178,[535]=96550,[541]=96922},{[502]=95816,[522]=94994,[528]=96188,[535]=96560,[541]=96932},{[502]=95821,[522]=94989,[528]=96193,[535]=96565,[541]=96937},{[502]=95804,[522]=94987,[528]=96176,[535]=96548,[541]=96920},{[502]=95819,[522]=94991,[528]=96191,[535]=96563,[541]=96935},{[502]=95813,[522]=94993,[528]=96185,[535]=96557,[541]=96929},{[502]=95812,[522]=94990,[528]=96184,[535]=96556,[541]=96928},{[502]=95807,[522]=95535,[528]=96179,[535]=96551,[541]=96923},{[502]=95808,[522]=94985,[528]=96180,[535]=96552,[541]=96924},{[502]=95805,[522]=94986,[528]=96177,[535]=96549,[541]=96921},{[502]=95820,[522]=94992,[528]=96192,[535]=96564,[541]=96936},{[502]=95817,[522]=94530,[528]=96189,[535]=96561,[541]=96933},{[502]=95814,[522]=94524,[528]=96186,[535]=96558,[541]=96930},{[502]=95811,[522]=94528,[528]=96183,[535]=96555,[541]=96927},{[502]=95802,[522]=94532,[528]=96174,[535]=96546,[541]=96918}},
[13] = {{[541]=95013},{[541]=95017},{[541]=95016},{[541]=95014},{[541]=95015},{[541]=95036},{[541]=95033},{[541]=95040},{[541]=95032},{[541]=95039},{[541]=95038},{[541]=95037},{[541]=95035},{[541]=95034},{[541]=94997},{[541]=95003},{[541]=95000},{[541]=94996},{[541]=95001},{[541]=95002},{[541]=94998},{[541]=94999},{[541]=94995},{[541]=95028},{[541]=95029},{[541]=95027},{[541]=95025},{[541]=95024},{[541]=95023},{[541]=95026},{[541]=95030},{[541]=95031},{[541]=95012},{[541]=95008},{[541]=95009},{[541]=95005},{[541]=95011},{[541]=95006},{[541]=95004},{[541]=95010},{[541]=95007},{[541]=95018},{[541]=95019},{[541]=95022},{[541]=95020},{[541]=95021}},
[14] = {{[502]=95958,[522]=95202,[528]=96330,[535]=96702},{[502]=95964,[522]=95203,[528]=96336,[535]=96708},{[502]=95969,[522]=95204,[528]=96341,[535]=96713},{[502]=95980,[522]=95206,[528]=96352,[535]=96724},{[502]=95977,[522]=95205,[528]=96349,[535]=96721},{[502]=95863,[522]=95061,[528]=96235,[535]=96607,[541]=96979},{[502]=95865,[522]=95067,[528]=96237,[535]=96609,[541]=96981},{[502]=95864,[522]=95066,[528]=96236,[535]=96608,[541]=96980},{[502]=95868,[522]=95065,[528]=96240,[535]=96612,[541]=96984},{[502]=95869,[522]=95062,[528]=96241,[535]=96613,[541]=96985},{[502]=95874,[522]=95068,[528]=96246,[535]=96618,[541]=96990},{[502]=95873,[522]=95063,[528]=96245,[535]=96617,[541]=96989},{[502]=95872,[522]=95069,[528]=96244,[535]=96616,[541]=96988},{[502]=95878,[522]=95516,[528]=96250,[535]=96622,[541]=96994},{[502]=95862,[522]=95507,[528]=96234,[535]=96606,[541]=96978},{[502]=95876,[522]=95502,[528]=96248,[535]=96620,[541]=96992},{[502]=95860,[522]=95501,[528]=96232,[535]=96604,[541]=96976},{[502]=95875,[522]=95505,[528]=96247,[535]=96619,[541]=96991},{[502]=95858,[522]=95499,[528]=96230,[535]=96602,[541]=96974},{[502]=95867,[522]=95500,[528]=96239,[535]=96611,[541]=96983},{[502]=95859,[522]=95503,[528]=96231,[535]=96603,[541]=96975},{[502]=95866,[522]=95506,[528]=96238,[535]=96610,[541]=96982},{[502]=97129,[522]=97126,[528]=97128,[535]=97127,[541]=97130},{[502]=95861,[522]=95504,[528]=96233,[535]=96605,[541]=96977},{[502]=95877,[522]=95498,[528]=96249,[535]=96621,[541]=96993},{[502]=95961,[522]=95207,[528]=96333,[535]=96705},{[502]=95971,[522]=95210,[528]=96343,[535]=96715},{[502]=95962,[522]=95208,[528]=96334,[535]=96706},{[502]=95970,[522]=95209,[528]=96342,[535]=96714},{[502]=95973,[522]=95212,[528]=96345,[535]=96717},{[502]=95972,[522]=95211,[528]=96344,[535]=96716},{[502]=95976,[522]=95215,[528]=96348,[535]=96720},{[502]=95975,[522]=95214,[528]=96347,[535]=96719},{[502]=95974,[522]=95213,[528]=96346,[535]=96718}},
[15] = {{[522]=95330,[535]=96730,[502]=95986,},{[522]=95331,[535]=96731,[502]=95987,},{[522]=95332,[535]=96732,[502]=95988,},{[522]=95333,[535]=96733,[502]=95989,},{[522]=95334,[535]=96734,[502]=95990,},{[522]=95335,[535]=96735,[502]=95991,},{[522]=95336,[535]=96736,[502]=95992,},{[522]=95337,[535]=96737,[502]=95993,},{[522]=95338,[535]=96738,[502]=95994,},{[522]=95339,[535]=96739,[502]=95995,},{[522]=95280,[535]=96654,[502]=95910,},{[522]=95281,[535]=96655,[502]=95911,},{[522]=95282,[535]=96656,[502]=95912,},{[522]=95283,[535]=96657,[502]=95913,},{[522]=95284,[535]=96658,[502]=95914,},{[522]=95290,[535]=96664,[502]=95920,},{[522]=95291,[535]=96665,[502]=95921,},{[522]=95292,[535]=96666,[502]=95922,},{[522]=95293,[535]=96667,[502]=95923,},{[522]=95294,[535]=96668,[502]=95924,},{[522]=95285,[535]=96659,[502]=95915,},{[522]=95286,[535]=96660,[502]=95916,},{[522]=95287,[535]=96661,[502]=95917,},{[522]=95288,[535]=96662,[502]=95918,},{[522]=95289,[535]=96663,[502]=95919,},{[522]=95255,[535]=96626,[502]=95882,},{[522]=95256,[535]=96627,[502]=95883,},{[522]=95257,[535]=96628,[502]=95884,},{[522]=95258,[535]=96629,[502]=95885,},{[522]=95259,[535]=96630,[502]=95886,},{[522]=95305,[535]=96679,[502]=95935,},{[522]=95306,[535]=96680,[502]=95936,},{[522]=95307,[535]=96681,[502]=95937,},{[522]=95308,[535]=96682,[502]=95938,},{[522]=95309,[535]=96683,[502]=95939,},{[522]=95300,[535]=96674,[502]=95930,},{[522]=95301,[535]=96675,[502]=95931,},{[522]=95302,[535]=96676,[502]=95932,},{[522]=95303,[535]=96677,[502]=95933,},{[522]=95304,[535]=96678,[502]=95934,},{[522]=95295,[535]=96669,[502]=95925,},{[522]=95296,[535]=96670,[502]=95926,},{[522]=95297,[535]=96671,[502]=95927,},{[522]=95298,[535]=96672,[502]=95928,},{[522]=95299,[535]=96673,[502]=95929,},{[522]=95225,[535]=96569,[502]=95825,},{[522]=95226,[535]=96570,[502]=95826,},{[522]=95227,[535]=96571,[502]=95827,},{[522]=95228,[535]=96572,[502]=95828,},{[522]=95229,[535]=96573,[502]=95829,},{[522]=95230,[535]=96574,[502]=95830,},{[522]=95231,[535]=96575,[502]=95831,},{[522]=95232,[535]=96576,[502]=95832,},{[522]=95233,[535]=96577,[502]=95833,},{[522]=95234,[535]=96578,[502]=95834,},{[522]=95315,[535]=96689,[502]=95945,},{[522]=95316,[535]=96690,[502]=95946,},{[522]=95317,[535]=96691,[502]=95947,},{[522]=95318,[535]=96692,[502]=95948,},{[522]=95319,[535]=96693,[502]=95949,},{[522]=95320,[535]=96694,[502]=95950,},{[522]=95321,[535]=96695,[502]=95951,},{[522]=95322,[535]=96696,[502]=95952,},{[522]=95323,[535]=96697,[502]=95953,},{[522]=95324,[535]=96698,[502]=95954,},{[522]=95310,[535]=96684,[502]=95940,},{[522]=95311,[535]=96685,[502]=95941,},{[522]=95312,[535]=96686,[502]=95942,},{[522]=95313,[535]=96687,[502]=95943,},{[522]=95314,[535]=96688,[502]=95944,},{[522]=95260,[535]=96634,[502]=95890,},{[522]=95261,[535]=96635,[502]=95891,},{[522]=95262,[535]=96636,[502]=95892,},{[522]=95263,[535]=96637,[502]=95893,},{[522]=95264,[535]=96638,[502]=95894,},{[522]=95325,[535]=96725,[502]=95981,},{[522]=95326,[535]=96726,[502]=95982,},{[522]=95327,[535]=96727,[502]=95983,},{[522]=95328,[535]=96728,[502]=95984,},{[522]=95329,[535]=96729,[502]=95985,},{[522]=95275,[535]=96649,[502]=95905,},{[522]=95276,[535]=96650,[502]=95906,},{[522]=95277,[535]=96651,[502]=95907,},{[522]=95278,[535]=96652,[502]=95908,},{[522]=95279,[535]=96653,[502]=95909,},{[522]=95265,[535]=96639,[502]=95895,},{[522]=95266,[535]=96640,[502]=95896,},{[522]=95267,[535]=96641,[502]=95897,},{[522]=95268,[535]=96642,[502]=95898,},{[522]=95269,[535]=96643,[502]=95899,},{[522]=95270,[535]=96644,[502]=95900,},{[522]=95271,[535]=96645,[502]=95901,},{[522]=95272,[535]=96646,[502]=95902,},{[522]=95273,[535]=96647,[502]=95903,},{[522]=95274,[535]=96648,[502]=95904,},{[522]=95250,[535]=96594,[502]=95850,},{[522]=95251,[535]=96595,[502]=95851,},{[522]=95252,[535]=96596,[502]=95852,},{[522]=95253,[535]=96597,[502]=95853,},{[522]=95254,[535]=96598,[502]=95854,},{[522]=95235,[535]=96579,[502]=95835,},{[522]=95236,[535]=96580,[502]=95836,},{[522]=95237,[535]=96581,[502]=95837,},{[522]=95238,[535]=96582,[502]=95838,},{[522]=95239,[535]=96583,[502]=95839,},{[522]=95245,[535]=96589,[502]=95845,},{[522]=95246,[535]=96590,[502]=95846,},{[522]=95247,[535]=96591,[502]=95847,},{[522]=95248,[535]=96592,[502]=95848,},{[522]=95249,[535]=96593,[502]=95849,},{[522]=95240,[535]=96584,[502]=95840,},{[522]=95241,[535]=96585,[502]=95841,},{[522]=95242,[535]=96586,[502]=95842,},{[522]=95243,[535]=96587,[502]=95843,},{[522]=95244,[535]=96588,[502]=95844,},},
}
]],
--> tokens
{[96600]=1,[96601]=1,[96599]=1,[96632]=1,[96633]=1,[96631]=1,[96567]=1,[96568]=1,[96566]=1,[96701]=1,[96700]=1,[96699]=1,[96624]=1,[96625]=1,[96623]=1},
--> other
upgrade = true,
asia = true,
classItems = {[96730]="WARRIOR", [96731]="WARRIOR", [96732]="WARRIOR", [96733]="WARRIOR", [96734]="WARRIOR", [96735]="WARRIOR", [96736]="WARRIOR", [96737]="WARRIOR", [96738]="WARRIOR", [96739]="WARRIOR", [96654]="PALADIN", [96655]="PALADIN", [96656]="PALADIN", [96657]="PALADIN", [96658]="PALADIN", [96664]="PALADIN", [96665]="PALADIN", [96666]="PALADIN", [96667]="PALADIN", [96668]="PALADIN", [96659]="PALADIN", [96660]="PALADIN", [96661]="PALADIN", [96662]="PALADIN", [96663]="PALADIN", [96626]="HUNTER", [96627]="HUNTER", [96628]="HUNTER", [96629]="HUNTER", [96630]="HUNTER", [96679]="ROGUE", [96680]="ROGUE", [96681]="ROGUE", [96682]="ROGUE", [96683]="ROGUE", [96674]="PRIEST", [96675]="PRIEST", [96676]="PRIEST", [96677]="PRIEST", [96678]="PRIEST", [96669]="PRIEST", [96670]="PRIEST", [96671]="PRIEST", [96672]="PRIEST", [96673]="PRIEST", [96569]="DEATHKNIGHT", [96570]="DEATHKNIGHT", [96571]="DEATHKNIGHT", [96572]="DEATHKNIGHT", [96573]="DEATHKNIGHT", [96574]="DEATHKNIGHT", [96575]="DEATHKNIGHT", [96576]="DEATHKNIGHT", [96577]="DEATHKNIGHT", [96578]="DEATHKNIGHT", [96689]="SHAMAN", [96690]="SHAMAN", [96691]="SHAMAN", [96692]="SHAMAN", [96693]="SHAMAN", [96694]="SHAMAN", [96695]="SHAMAN", [96696]="SHAMAN", [96697]="SHAMAN", [96698]="SHAMAN", [96684]="SHAMAN", [96685]="SHAMAN", [96686]="SHAMAN", [96687]="SHAMAN", [96688]="SHAMAN", [96634]="MAGE", [96635]="MAGE", [96636]="MAGE", [96637]="MAGE", [96638]="MAGE", [96725]="WARLOCK", [96726]="WARLOCK", [96727]="WARLOCK", [96728]="WARLOCK", [96729]="WARLOCK", [96649]="MONK", [96650]="MONK", [96651]="MONK", [96652]="MONK", [96653]="MONK", [96639]="MONK", [96640]="MONK", [96641]="MONK", [96642]="MONK", [96643]="MONK", [96644]="MONK", [96645]="MONK", [96646]="MONK", [96647]="MONK", [96648]="MONK", [96594]="DRUID", [96595]="DRUID", [96596]="DRUID", [96597]="DRUID", [96598]="DRUID", [96579]="DRUID", [96580]="DRUID", [96581]="DRUID", [96582]="DRUID", [96583]="DRUID", [96589]="DRUID", [96590]="DRUID", [96591]="DRUID", [96592]="DRUID", [96593]="DRUID", [96584]="DRUID", [96585]="DRUID", [96586]="DRUID", [96587]="DRUID", [96588]="DRUID", },
upgradeIndex = {465,466,467,470,471,472},
}

--------> t16 SoO
module.db.base[2] = {
--> name
ExRT.L.sooitemst16,
--> bosses
{[1] = ExRT.L.sooitemssooboss1, [2] = ExRT.L.sooitemssooboss2, [3] = ExRT.L.sooitemssooboss3, [4] = ExRT.L.sooitemssooboss4, [5] = ExRT.L.sooitemssooboss5, [6] = ExRT.L.sooitemssooboss6, [7] = ExRT.L.sooitemssooboss7, [8] = ExRT.L.sooitemssooboss8, [9] = ExRT.L.sooitemssooboss9, [10] = ExRT.L.sooitemssooboss10, [11] = ExRT.L.sooitemssooboss11, [12] = ExRT.L.sooitemssooboss12, [13] = ExRT.L.sooitemssooboss13, [14] = ExRT.L.sooitemssooboss14, [15] = ExRT.L.sooitemstrash, [16] = ExRT.L.sooitemssets},
--> loot
[[
local module = GExRTRaidLootGlobal
module.db.base[2][3] = {
[1] = {{[528]=104910,[540]=104661,[553]=103726,[559]=105159,[566]=104412,[572]=105408},{[528]=104919,[540]=104670,[553]=103727,[559]=105168,[566]=104421,[572]=105417},{[528]=104922,[540]=104673,[553]=103751,[559]=105171,[566]=104424,[572]=105420},{[528]=104911,[540]=104662,[553]=103728,[559]=105160,[566]=104413,[572]=105409},{[528]=104909,[540]=104660,[553]=103749,[559]=105158,[566]=104411,[572]=105407},{[528]=104918,[540]=104669,[553]=103747,[559]=105167,[566]=104420,[572]=105416},{[528]=104921,[540]=104672,[553]=103755,[559]=105170,[566]=104423,[572]=105419},{[528]=104923,[540]=104674,[553]=103769,[559]=105172,[566]=104425,[572]=105421},{[528]=104914,[540]=104665,[553]=103736,[559]=105163,[566]=104416,[572]=105412},{[528]=104913,[540]=104664,[553]=103738,[559]=105162,[566]=104415,[572]=105411},{[528]=104917,[540]=104668,[553]=103741,[559]=105166,[566]=104419,[572]=105415},{[528]=104927,[540]=104678,[553]=103757,[559]=105176,[566]=104429,[572]=105425},{[528]=104920,[540]=104671,[553]=103752,[559]=105169,[566]=104422,[572]=105418},{[528]=104915,[540]=104666,[553]=103733,[559]=105164,[566]=104417,[572]=105413},{[528]=104928,[540]=104679,[553]=103763,[559]=105177,[566]=104430,[572]=105426},{[528]=104929,[540]=104680,[553]=103966,[559]=105178,[566]=104431,[572]=105427},{[528]=104916,[540]=104667,[553]=103744,[559]=105165,[566]=104418,[572]=105414},{[528]=104930,[540]=104681,[553]=103766,[559]=105179,[566]=104432,[572]=105428},{[528]=104912,[540]=104663,[553]=103730,[559]=105161,[566]=104414,[572]=105410},{[528]=104926,[540]=104677,[553]=103760,[559]=105175,[566]=104428,[572]=105424},{[528]=104925,[540]=104676,[553]=103771,[559]=105174,[566]=104427,[572]=105423},{[528]=104924,[540]=104675,[553]=102293,[559]=105173,[566]=104426,[572]=105422}},
[2] = {{[528]=104932,[540]=104683,[553]=103775,[559]=105181,[566]=104434,[572]=105430},{[528]=104931,[540]=104682,[553]=103776,[559]=105180,[566]=104433,[572]=105429},{[528]=104946,[540]=104697,[553]=103801,[559]=105195,[566]=104448,[572]=105444},{[528]=104951,[540]=104702,[553]=103820,[559]=105200,[566]=104453,[572]=105449},{[528]=104936,[540]=104687,[553]=103783,[559]=105185,[566]=104438,[572]=105434},{[528]=104947,[540]=104698,[553]=103924,[559]=105196,[566]=104449,[572]=105445},{[528]=104943,[540]=104694,[553]=103807,[559]=105192,[566]=104445,[572]=105441},{[528]=104949,[540]=104700,[553]=103815,[559]=105198,[566]=104451,[572]=105447},{[528]=104939,[540]=104690,[553]=103799,[559]=105188,[566]=104441,[572]=105437},{[528]=104942,[540]=104693,[553]=103802,[559]=105191,[566]=104444,[572]=105440},{[528]=104944,[540]=104695,[553]=103809,[559]=105193,[566]=104446,[572]=105442},{[528]=104934,[540]=104685,[553]=103780,[559]=105183,[566]=104436,[572]=105432},{[528]=104950,[540]=104701,[553]=103817,[559]=105199,[566]=104452,[572]=105448},{[528]=104937,[540]=104688,[553]=103790,[559]=105186,[566]=104439,[572]=105435},{[528]=104935,[540]=104686,[553]=103787,[559]=105184,[566]=104437,[572]=105433},{[528]=104948,[540]=104699,[553]=103812,[559]=105197,[566]=104450,[572]=105446},{[528]=104941,[540]=104692,[553]=103804,[559]=105190,[566]=104443,[572]=105439},{[528]=104933,[540]=104684,[553]=103777,[559]=105182,[566]=104435,[572]=105431},{[528]=104945,[540]=104696,[553]=103822,[559]=105194,[566]=104447,[572]=105443},{[528]=104938,[540]=104689,[553]=103793,[559]=105187,[566]=104440,[572]=105436},{[528]=104940,[540]=104691,[553]=102296,[559]=105189,[566]=104442,[572]=105438}},
[3] = {{[528]=104962,[540]=104713,[553]=103826,[559]=105211,[566]=104464,[572]=105460},{[528]=104952,[540]=104703,[553]=103827,[559]=105201,[566]=104454,[572]=105450},{[528]=104968,[540]=104719,[553]=103847,[559]=105217,[566]=104470,[572]=105466},{[528]=104959,[540]=104710,[553]=103839,[559]=105208,[566]=104461,[572]=105457},{[528]=104967,[540]=104718,[553]=103867,[559]=105216,[566]=104469,[572]=105465},{[528]=104957,[540]=104708,[553]=103836,[559]=105206,[566]=104459,[572]=105455},{[528]=104966,[540]=104717,[553]=103857,[559]=105215,[566]=104468,[572]=105464},{[528]=104960,[540]=104711,[553]=103845,[559]=105209,[566]=104462,[572]=105458},{[528]=104954,[540]=104705,[553]=103834,[559]=105203,[566]=104456,[572]=105452},{[528]=104963,[540]=104714,[553]=103849,[559]=105212,[566]=104465,[572]=105461},{[528]=104971,[540]=104722,[553]=103861,[559]=105220,[566]=104473,[572]=105469},{[528]=104958,[540]=104709,[553]=103740,[559]=105207,[566]=104460,[572]=105456},{[528]=104973,[540]=104724,[553]=103864,[559]=105222,[566]=104475,[572]=105471},{[528]=104955,[540]=104706,[553]=103830,[559]=105204,[566]=104457,[572]=105453},{[528]=104964,[540]=104715,[553]=103852,[559]=105213,[566]=104466,[572]=105462},{[528]=104970,[540]=104721,[553]=103858,[559]=105219,[566]=104472,[572]=105468},{[528]=104965,[540]=104716,[553]=103855,[559]=105214,[566]=104467,[572]=105463},{[528]=104972,[540]=104723,[553]=103942,[559]=105221,[566]=104474,[572]=105470},{[528]=104956,[540]=104707,[553]=103838,[559]=105205,[566]=104458,[572]=105454},{[528]=104969,[540]=104720,[553]=103762,[559]=105218,[566]=104471,[572]=105467},{[528]=104953,[540]=104704,[553]=103841,[559]=105202,[566]=104455,[572]=105451},{[528]=104961,[540]=104712,[553]=102295,[559]=105210,[566]=104463,[572]=105459}},
[4] = {{[528]=99678,[540]=99743,[553]=99686,[566]=99715},{[528]=99679,[540]=99744,[553]=99691,[566]=99716},{[528]=99677,[540]=99742,[553]=99696,[566]=99714},{[528]=104981,[540]=104732,[553]=103869,[559]=105230,[566]=104483,[572]=105479},{[528]=104977,[540]=104728,[553]=103873,[559]=105226,[566]=104479,[572]=105475},{[528]=104983,[540]=104734,[553]=103870,[559]=105232,[566]=104485,[572]=105481},{[528]=104979,[540]=104730,[553]=103821,[559]=105228,[566]=104481,[572]=105477},{[528]=104978,[540]=104729,[553]=103876,[559]=105227,[566]=104480,[572]=105476},{[528]=104982,[540]=104733,[553]=103883,[559]=105231,[566]=104484,[572]=105480},{[528]=104975,[540]=104726,[553]=103881,[559]=105224,[566]=104477,[572]=105473},{[528]=104980,[540]=104731,[553]=103878,[559]=105229,[566]=104482,[572]=105478},{[528]=104976,[540]=104727,[553]=102299,[559]=105225,[566]=104478,[572]=105474},{[528]=104974,[540]=104725,[553]=102292,[559]=105223,[566]=104476,[572]=105472}},
[5] = {{[528]=105001,[540]=104752,[553]=103875,[559]=105250,[566]=104503,[572]=105499},{[528]=104984,[540]=104735,[553]=103885,[559]=105233,[566]=104486,[572]=105482},{[528]=104997,[540]=104748,[553]=103900,[559]=105246,[566]=104499,[572]=105495},{[528]=104990,[540]=104741,[553]=103892,[559]=105239,[566]=104492,[572]=105488},{[528]=104999,[540]=104750,[553]=103756,[559]=105248,[566]=104501,[572]=105497},{[528]=104992,[540]=104743,[553]=103748,[559]=105241,[566]=104494,[572]=105490},{[528]=104991,[540]=104742,[553]=103743,[559]=105240,[566]=104493,[572]=105489},{[528]=104996,[540]=104747,[553]=103850,[559]=105245,[566]=104498,[572]=105494},{[528]=105004,[540]=104755,[553]=103865,[559]=105253,[566]=104506,[572]=105502},{[528]=104989,[540]=104740,[553]=103889,[559]=105238,[566]=104491,[572]=105487},{[528]=105003,[540]=104754,[553]=103765,[559]=105252,[566]=104505,[572]=105501},{[528]=104987,[540]=104738,[553]=103831,[559]=105236,[566]=104489,[572]=105485},{[528]=105002,[540]=104753,[553]=103905,[559]=105251,[566]=104504,[572]=105500},{[528]=104988,[540]=104739,[553]=103887,[559]=105237,[566]=104490,[572]=105486},{[528]=105005,[540]=104756,[553]=103907,[559]=105254,[566]=104507,[572]=105503},{[528]=104986,[540]=104737,[553]=103778,[559]=105235,[566]=104488,[572]=105484},{[528]=104995,[540]=104746,[553]=103805,[559]=105244,[566]=104497,[572]=105493},{[528]=104998,[540]=104749,[553]=103902,[559]=105247,[566]=104500,[572]=105496},{[528]=104994,[540]=104745,[553]=103894,[559]=105243,[566]=104496,[572]=105492},{[528]=104985,[540]=104736,[553]=103842,[559]=105234,[566]=104487,[572]=105483},{[528]=105000,[540]=104751,[553]=103823,[559]=105249,[566]=104502,[572]=105498},{[528]=104993,[540]=104744,[553]=102298,[559]=105242,[566]=104495,[572]=105491}},
[6] = {{[528]=105006,[540]=104757,[553]=103908,[559]=105255,[566]=104508,[572]=105504},{[528]=105023,[540]=104774,[553]=103918,[559]=105272,[566]=104525,[572]=105521},{[528]=105015,[540]=104766,[553]=103916,[559]=105264,[566]=104517,[572]=105513},{[528]=105008,[540]=104759,[553]=103912,[559]=105257,[566]=104510,[572]=105506},{[528]=105014,[540]=104765,[553]=103914,[559]=105263,[566]=104516,[572]=105512},{[528]=105021,[540]=104772,[553]=103922,[559]=105270,[566]=104523,[572]=105519},{[528]=105026,[540]=104777,[553]=103863,[559]=105275,[566]=104528,[572]=105524},{[528]=105024,[540]=104775,[553]=103759,[559]=105273,[566]=104526,[572]=105522},{[528]=105019,[540]=104770,[553]=103811,[559]=105268,[566]=104521,[572]=105517},{[528]=105007,[540]=104758,[553]=103909,[559]=105256,[566]=104509,[572]=105505},{[528]=105012,[540]=104763,[553]=103739,[559]=105261,[566]=104514,[572]=105510},{[528]=105010,[540]=104761,[553]=103782,[559]=105259,[566]=104512,[572]=105508},{[528]=105020,[540]=104771,[553]=103754,[559]=105269,[566]=104522,[572]=105518},{[528]=105013,[540]=104764,[553]=103735,[559]=105262,[566]=104515,[572]=105511},{[528]=105017,[540]=104768,[553]=103898,[559]=105266,[566]=104519,[572]=105515},{[528]=105011,[540]=104762,[553]=103788,[559]=105260,[566]=104513,[572]=105509},{[528]=105018,[540]=104769,[553]=103921,[559]=105267,[566]=104520,[572]=105516},{[528]=105025,[540]=104776,[553]=103813,[559]=105274,[566]=104527,[572]=105523},{[528]=105027,[540]=104778,[553]=103767,[559]=105276,[566]=104529,[572]=105525},{[528]=105009,[540]=104760,[553]=103731,[559]=105258,[566]=104511,[572]=105507},{[528]=105022,[540]=104773,[553]=103773,[559]=105271,[566]=104524,[572]=105520},{[528]=105016,[540]=104767,[553]=102297,[559]=105265,[566]=104518,[572]=105514}},
[7] = {{[528]=105037,[540]=104788,[553]=103926,[559]=105286,[566]=104539,[572]=105535},{[528]=105043,[540]=104794,[553]=103936,[559]=105292,[566]=104545,[572]=105541},{[528]=105040,[540]=104791,[553]=103938,[559]=105289,[566]=104542,[572]=105538},{[528]=105044,[540]=104795,[553]=103877,[559]=105293,[566]=104546,[572]=105542},{[528]=105032,[540]=104783,[553]=103930,[559]=105281,[566]=104534,[572]=105530},{[528]=105041,[540]=104792,[553]=103868,[559]=105290,[566]=104543,[572]=105539},{[528]=105048,[540]=104799,[553]=103943,[559]=105297,[566]=104550,[572]=105546},{[528]=105046,[540]=104797,[553]=103816,[559]=105295,[566]=104548,[572]=105544},{[528]=105028,[540]=104779,[553]=103934,[559]=105277,[566]=104530,[572]=105526},{[528]=105034,[540]=104785,[553]=103737,[559]=105283,[566]=104536,[572]=105532},{[528]=105047,[540]=104798,[553]=103866,[559]=105296,[566]=104549,[572]=105545},{[528]=105045,[540]=104796,[553]=103940,[559]=105294,[566]=104547,[572]=105543},{[528]=105030,[540]=104781,[553]=103927,[559]=105279,[566]=104532,[572]=105528},{[528]=105035,[540]=104786,[553]=103932,[559]=105284,[566]=104537,[572]=105533},{[528]=105031,[540]=104782,[553]=103929,[559]=105280,[566]=104533,[572]=105529},{[528]=105039,[540]=104790,[553]=103806,[559]=105288,[566]=104541,[572]=105537},{[528]=105033,[540]=104784,[553]=103880,[559]=105282,[566]=104535,[572]=105531},{[528]=105038,[540]=104789,[553]=103895,[559]=105287,[566]=104540,[572]=105536},{[528]=105036,[540]=104787,[553]=103798,[559]=105285,[566]=104538,[572]=105534},{[528]=105029,[540]=104780,[553]=102301,[559]=105278,[566]=104531,[572]=105527},{[528]=105042,[540]=104793,[553]=102300,[559]=105291,[566]=104544,[572]=105540}},
[8] = {{[528]=99681,[540]=99746,[553]=99687,[566]=99721},{[528]=99667,[540]=99747,[553]=99692,[566]=99722},{[528]=99680,[540]=99745,[553]=99682,[566]=99720},{[528]=105057,[540]=104808,[553]=103945,[559]=105306,[566]=104559,[572]=105555},{[528]=105052,[540]=104803,[553]=103946,[559]=105301,[566]=104554,[572]=105550},{[528]=105049,[540]=104800,[553]=103829,[559]=105298,[566]=104551,[572]=105547},{[528]=105058,[540]=104809,[553]=103872,[559]=105307,[566]=104560,[572]=105556},{[528]=105056,[540]=104807,[553]=103949,[559]=105305,[566]=104558,[572]=105554},{[528]=105059,[540]=104810,[553]=103808,[559]=105308,[566]=104561,[572]=105557},{[528]=105053,[540]=104804,[553]=103913,[559]=105302,[566]=104555,[572]=105551},{[528]=105054,[540]=104805,[553]=103947,[559]=105303,[566]=104556,[572]=105552},{[528]=105055,[540]=104806,[553]=103732,[559]=105304,[566]=104557,[572]=105553},{[528]=105050,[540]=104801,[553]=103904,[559]=105299,[566]=104552,[572]=105548},{[528]=105051,[540]=104802,[553]=102294,[559]=105300,[566]=104553,[572]=105549}},
[9] = {{[528]=105062,[540]=104813,[553]=103952,[559]=105311,[566]=104564,[572]=105560},{[528]=105069,[540]=104820,[553]=103951,[559]=105318,[566]=104571,[572]=105567},{[528]=105061,[540]=104812,[553]=103953,[559]=105310,[566]=104563,[572]=105559},{[528]=105077,[540]=104828,[553]=103848,[559]=105326,[566]=104579,[572]=105575},{[528]=105072,[540]=104823,[553]=103939,[559]=105321,[566]=104574,[572]=105570},{[528]=105068,[540]=104819,[553]=103917,[559]=105317,[566]=104570,[572]=105566},{[528]=105075,[540]=104826,[553]=103959,[559]=105324,[566]=104577,[572]=105573},{[528]=105081,[540]=104832,[553]=103957,[559]=105330,[566]=104583,[572]=105579},{[528]=105080,[540]=104831,[553]=103955,[559]=105329,[566]=104582,[572]=105578},{[528]=105073,[540]=104824,[553]=103923,[559]=105322,[566]=104575,[572]=105571},{[528]=105063,[540]=104814,[553]=103835,[559]=105312,[566]=104565,[572]=105561},{[528]=105064,[540]=104815,[553]=103890,[559]=105313,[566]=104566,[572]=105562},{[528]=105066,[540]=104817,[553]=103742,[559]=105315,[566]=104568,[572]=105564},{[528]=105079,[540]=104830,[553]=103758,[559]=105328,[566]=104581,[572]=105577},{[528]=105071,[540]=104822,[553]=103899,[559]=105320,[566]=104573,[572]=105569},{[528]=105067,[540]=104818,[553]=103954,[559]=105316,[566]=104569,[572]=105565},{[528]=105065,[540]=104816,[553]=103879,[559]=105314,[566]=104567,[572]=105563},{[528]=105078,[540]=104829,[553]=103761,[559]=105327,[566]=104580,[572]=105576},{[528]=105060,[540]=104811,[553]=103843,[559]=105309,[566]=104562,[572]=105558},{[528]=105076,[540]=104827,[553]=103772,[559]=105325,[566]=104578,[572]=105574},{[528]=105074,[540]=104825,[553]=102303,[559]=105323,[566]=104576,[572]=105572},{[528]=105070,[540]=104821,[553]=102306,[559]=105319,[566]=104572,[572]=105568}},
[10] = {{[528]=105083,[540]=104834,[553]=103961,[559]=105332,[566]=104585,[572]=105581},{[528]=105096,[540]=104847,[553]=103964,[559]=105345,[566]=104598,[572]=105594},{[528]=105092,[540]=104843,[553]=103871,[559]=105341,[566]=104594,[572]=105590},{[528]=105088,[540]=104839,[553]=103893,[559]=105337,[566]=104590,[572]=105586},{[528]=105095,[540]=104846,[553]=103882,[559]=105344,[566]=104597,[572]=105593},{[528]=105087,[540]=104838,[553]=103962,[559]=105336,[566]=104589,[572]=105585},{[528]=105094,[540]=104845,[553]=103803,[559]=105343,[566]=104596,[572]=105592},{[528]=105093,[540]=104844,[553]=103851,[559]=105342,[566]=104595,[572]=105591},{[528]=105100,[540]=104851,[553]=103862,[559]=105349,[566]=104602,[572]=105598},{[528]=105085,[540]=104836,[553]=103911,[559]=105334,[566]=104587,[572]=105583},{[528]=105097,[540]=104848,[553]=103860,[559]=105346,[566]=104599,[572]=105595},{[528]=105101,[540]=104852,[553]=103965,[559]=105350,[566]=104603,[572]=105599},{[528]=105089,[540]=104840,[553]=103933,[559]=105338,[566]=104591,[572]=105587},{[528]=105086,[540]=104837,[553]=103888,[559]=105335,[566]=104588,[572]=105584},{[528]=105099,[540]=104850,[553]=103941,[559]=105348,[566]=104601,[572]=105597},{[528]=105098,[540]=104849,[553]=103967,[559]=105347,[566]=104600,[572]=105596},{[528]=105090,[540]=104841,[553]=103745,[559]=105339,[566]=104592,[572]=105588},{[528]=105102,[540]=104853,[553]=103768,[559]=105351,[566]=104604,[572]=105600},{[528]=105084,[540]=104835,[553]=103779,[559]=105333,[566]=104586,[572]=105582},{[528]=105091,[540]=104842,[553]=103796,[559]=105340,[566]=104593,[572]=105589},{[528]=105082,[540]=104833,[553]=102302,[559]=105331,[566]=104584,[572]=105580}},
[11] = {{[528]=99672,[540]=99749,[553]=99689,[566]=99724},{[528]=99673,[540]=99750,[553]=99694,[566]=99725},{[528]=99671,[540]=99748,[553]=99683,[566]=99723},{[528]=105112,[540]=104863,[553]=103968,[559]=105361,[566]=104614,[572]=105610},{[528]=105103,[540]=104854,[553]=103828,[559]=105352,[566]=104605,[572]=105601},{[528]=105107,[540]=104858,[553]=103919,[559]=105356,[566]=104609,[572]=105605},{[528]=105104,[540]=104855,[553]=103750,[559]=105353,[566]=104606,[572]=105602},{[528]=105110,[540]=104861,[553]=103915,[559]=105359,[566]=104612,[572]=105608},{[528]=105106,[540]=104857,[553]=104308,[559]=105355,[566]=104608,[572]=105604},{[528]=105105,[540]=104856,[553]=103853,[559]=105354,[566]=104607,[572]=105603},{[528]=105113,[540]=104864,[553]=103896,[559]=105362,[566]=104615,[572]=105611},{[528]=105108,[540]=104859,[553]=103774,[559]=105357,[566]=104610,[572]=105606},{[528]=105109,[540]=104860,[553]=102304,[559]=105358,[566]=104611,[572]=105607},{[528]=105111,[540]=104862,[553]=102305,[559]=105360,[566]=104613,[572]=105609}},
[12] = {{[528]=99669,[540]=99755,[553]=99690,[566]=99718},{[528]=99670,[540]=99756,[553]=99695,[566]=99719},{[528]=99668,[540]=99754,[553]=99685,[566]=99717},{[528]=105116,[540]=104867,[553]=103874,[559]=105365,[566]=104618,[572]=105614},{[528]=105123,[540]=104874,[553]=103969,[559]=105372,[566]=104625,[572]=105621},{[528]=105124,[540]=104875,[553]=103884,[559]=105373,[566]=104626,[572]=105622},{[528]=105119,[540]=104870,[553]=103891,[559]=105368,[566]=104621,[572]=105617},{[528]=105118,[540]=104869,[553]=103910,[559]=105367,[566]=104620,[572]=105616},{[528]=105121,[540]=104872,[553]=103792,[559]=105370,[566]=104623,[572]=105619},{[528]=105115,[540]=104866,[553]=103970,[559]=105364,[566]=104617,[572]=105613},{[528]=105120,[540]=104871,[553]=103814,[559]=105369,[566]=104622,[572]=105618},{[528]=105122,[540]=104873,[553]=103794,[559]=105371,[566]=104624,[572]=105620},{[528]=105117,[540]=104868,[553]=102309,[559]=105366,[566]=104619,[572]=105615},{[528]=105114,[540]=104865,[553]=102311,[559]=105363,[566]=104616,[572]=105612}},
[13] = {{[528]=99675,[540]=99752,[553]=99688,[566]=99712},{[528]=99676,[540]=99753,[553]=99693,[566]=99713},{[528]=99674,[540]=99751,[553]=99684,[566]=99726},{[528]=105127,[540]=104878,[553]=103971,[559]=105376,[566]=104629,[572]=105625},{[528]=105129,[540]=104880,[553]=103973,[559]=105378,[566]=104631,[572]=105627},{[528]=105135,[540]=104886,[553]=103972,[559]=105384,[566]=104637,[572]=105633},{[528]=105125,[540]=104876,[553]=103886,[559]=105374,[566]=104627,[572]=105623},{[528]=105131,[540]=104882,[553]=103948,[559]=105380,[566]=104633,[572]=105629},{[528]=105132,[540]=104883,[553]=103956,[559]=105381,[566]=104634,[572]=105630},{[528]=105128,[540]=104879,[553]=103810,[559]=105377,[566]=104630,[572]=105626},{[528]=105133,[540]=104884,[553]=103819,[559]=105382,[566]=104635,[572]=105631},{[528]=105126,[540]=104877,[553]=103844,[559]=105375,[566]=104628,[572]=105624},{[528]=105130,[540]=104881,[553]=103824,[559]=105379,[566]=104632,[572]=105628},{[528]=105134,[540]=104885,[553]=102308,[559]=105383,[566]=104636,[572]=105632}},
[14] = {{[553]=105858,[566]=105867,[540]=105864,[528]=105861},{[553]=105857,[566]=105866,[540]=105863,[528]=105860},{[553]=105859,[566]=105868,[540]=105865,[528]=105862},{[528]=105136,[540]=104887,[553]=103974,[559]=105385,[566]=104638,[572]=105634},{[528]=105146,[540]=104897,[553]=103649,[559]=105395,[566]=104648,[572]=105644},{[528]=105151,[540]=104902,[553]=103937,[559]=105400,[566]=104653,[572]=105649},{[528]=105152,[540]=104903,[553]=103920,[559]=105401,[566]=104654,[572]=105650},{[528]=105145,[540]=104896,[553]=103840,[559]=105394,[566]=104647,[572]=105643},{[528]=105140,[540]=104891,[553]=103931,[559]=105389,[566]=104642,[572]=105638},{[528]=105155,[540]=104906,[553]=103950,[559]=105404,[566]=104657,[572]=105653},{[528]=105138,[540]=104889,[553]=103729,[559]=105387,[566]=104640,[572]=105636},{[528]=105149,[540]=104900,[553]=103901,[559]=105398,[566]=104651,[572]=105647},{[553]=103785,[559]=105393,[566]=104646,[572]=105642},{[528]=105157,[540]=104908,[553]=103944,[559]=105406,[566]=104659,[572]=105655},{[528]=105143,[540]=104894,[553]=103784,[559]=105392,[566]=104645,[572]=105641},{[528]=105154,[540]=104905,[553]=103925,[559]=105403,[566]=104656,[572]=105652},{[528]=105141,[540]=104892,[553]=103837,[559]=105390,[566]=104643,[572]=105639},{[528]=105156,[540]=104907,[553]=103958,[559]=105405,[566]=104658,[572]=105654},{[528]=105139,[540]=104890,[553]=103963,[559]=105388,[566]=104641,[572]=105637},{[528]=105153,[540]=104904,[553]=103906,[559]=105402,[566]=104655,[572]=105651},{[528]=105148,[540]=104899,[553]=103856,[559]=105397,[566]=104650,[572]=105646},{[528]=105137,[540]=104888,[553]=103928,[559]=105386,[566]=104639,[572]=105635},{[528]=105142,[540]=104893,[553]=104311,[559]=105391,[566]=104644,[572]=105640},{[528]=105147,[540]=104898,[553]=102307,[559]=105396,[566]=104649,[572]=105645},{[528]=105150,[540]=104901,[553]=102310,[559]=105399,[566]=104652,[572]=105648},{[548]=105672,[561]=104404,[574]=105685},{[548]=105670,[561]=104399,[574]=105683},{[548]=105680,[561]=104407,[574]=105693},{[548]=105677,[561]=104406,[574]=105690},{[548]=105679,[561]=104405,[574]=105692},{[548]=105676,[561]=104408,[574]=105689},{[548]=105673,[561]=104403,[574]=105686},{[548]=105675,[561]=104402,[574]=105688},{[548]=105678,[561]=104401,[574]=105691},{[548]=105671,[561]=104400,[574]=105684},{[548]=105674,[561]=104409,[574]=105687}},
[15] = {{[528]=105824,[540]=105838,[553]=103846,[566]=105852},{[528]=105816,[540]=105830,[553]=103960,[566]=105844},{[528]=105812,[540]=105826,[553]=103935,[566]=105840},{[528]=105815,[540]=105829,[553]=103770,[566]=105843},{[528]=105825,[540]=105839,[553]=103800,[566]=105853},{[528]=105813,[540]=105827,[553]=103854,[566]=105841},{[528]=105814,[540]=105828,[553]=103753,[566]=105842},{[528]=105818,[540]=105832,[553]=103859,[566]=105846},{[528]=105817,[540]=105831,[553]=103832,[566]=105845},{[528]=105819,[540]=105833,[553]=103781,[566]=105847},{[528]=105820,[540]=105834,[553]=103764,[566]=105848},{[528]=105823,[540]=105837,[553]=103791,[566]=105851},{[528]=105822,[540]=105836,[553]=103734,[566]=105850},{[528]=105821,[540]=105835,[553]=103818,[566]=105849}},
[16] = {{[553]=99197,[566]=99411,[540]=99603,[528]=99047,},{[553]=99198,[566]=99412,[540]=99559,[528]=99034,},{[553]=99199,[566]=99413,[540]=99560,[528]=99035,},{[553]=99200,[566]=99414,[540]=99561,[528]=99036,},{[553]=99206,[566]=99418,[540]=99602,[528]=99046,},{[553]=99195,[566]=99410,[540]=99558,[528]=99033,},{[553]=99196,[566]=99407,[540]=99597,[528]=99030,},{[553]=99201,[566]=99415,[540]=99562,[528]=99037,},{[553]=99202,[566]=99408,[540]=99563,[528]=99038,},{[553]=99203,[566]=99409,[540]=99557,[528]=99032,},{[553]=99132,[566]=99373,[540]=99662,[528]=98987,},{[553]=99136,[566]=99387,[540]=99566,[528]=99052,},{[553]=99137,[566]=99380,[540]=99625,[528]=99002,},{[553]=99138,[566]=99379,[540]=99651,[528]=98985,},{[553]=99139,[566]=99372,[540]=99661,[528]=98986,},{[553]=99126,[566]=99368,[540]=99598,[528]=99031,},{[553]=99127,[566]=99369,[540]=99595,[528]=99028,},{[553]=99128,[566]=99370,[540]=99596,[528]=99029,},{[553]=99129,[566]=99371,[540]=99593,[528]=99026,},{[553]=99130,[566]=99364,[540]=99594,[528]=99027,},{[553]=99133,[566]=99374,[540]=99626,[528]=99003,},{[553]=99124,[566]=99377,[540]=99666,[528]=98980,},{[553]=99125,[566]=99378,[540]=99656,[528]=99076,},{[553]=99134,[566]=99375,[540]=99648,[528]=98982,},{[553]=99135,[566]=99376,[540]=99665,[528]=98979,},{[553]=99157,[566]=99402,[540]=99660,[528]=99080,},{[553]=99158,[566]=99403,[540]=99573,[528]=99081,},{[553]=99159,[566]=99404,[540]=99574,[528]=99082,},{[553]=99167,[566]=99405,[540]=99577,[528]=99085,},{[553]=99168,[566]=99406,[540]=99578,[528]=99086,},{[553]=99113,[566]=99355,[540]=99630,[528]=99007,},{[553]=99112,[566]=99356,[540]=99629,[528]=99006,},{[553]=99114,[566]=99348,[540]=99631,[528]=99008,},{[553]=99115,[566]=99349,[540]=99634,[528]=99009,},{[553]=99116,[566]=99350,[540]=99635,[528]=99010,},{[553]=99123,[566]=99361,[540]=99588,[528]=99021,},{[553]=99110,[566]=99362,[540]=99627,[528]=99004,},{[553]=99111,[566]=99363,[540]=99628,[528]=99005,},{[553]=99121,[566]=99359,[540]=99586,[528]=99019,},{[553]=99122,[566]=99360,[540]=99587,[528]=99020,},{[553]=99117,[566]=99366,[540]=99591,[528]=99024,},{[553]=99118,[566]=99367,[540]=99592,[528]=99025,},{[553]=99119,[566]=99357,[540]=99584,[528]=99017,},{[553]=99120,[566]=99358,[540]=99585,[528]=99018,},{[553]=99131,[566]=99365,[540]=99590,[528]=99023,},{[553]=99186,[566]=99338,[540]=99572,[528]=99058,},{[553]=99187,[566]=99339,[540]=99639,[528]=99059,},{[553]=99192,[566]=99335,[540]=99608,[528]=99066,},{[553]=99193,[566]=99336,[540]=99609,[528]=99067,},{[553]=99194,[566]=99337,[540]=99571,[528]=99057,},{[553]=99179,[566]=99325,[540]=99652,[528]=99040,},{[553]=99188,[566]=99330,[540]=99640,[528]=99060,},{[553]=99189,[566]=99331,[540]=99604,[528]=99048,},{[553]=99190,[566]=99323,[540]=99605,[528]=99049,},{[553]=99191,[566]=99324,[540]=99564,[528]=99039,},{[553]=99101,[566]=99347,[540]=99615,[528]=98992,},{[553]=99102,[566]=99340,[540]=99616,[528]=98993,},{[553]=99103,[566]=99341,[540]=99649,[528]=98983,},{[553]=99104,[566]=99342,[540]=99650,[528]=98984,},{[553]=99105,[566]=99343,[540]=99663,[528]=98977,},{[553]=99092,[566]=99345,[540]=99580,[528]=99088,},{[553]=99093,[566]=99332,[540]=99645,[528]=99089,},{[553]=99094,[566]=99333,[540]=99646,[528]=99090,},{[553]=99095,[566]=99334,[540]=99647,[528]=99091,},{[553]=99106,[566]=99344,[540]=99579,[528]=99087,},{[553]=99099,[566]=99354,[540]=99613,[528]=98990,},{[553]=99100,[566]=99346,[540]=99614,[528]=98991,},{[553]=99107,[566]=99351,[540]=99636,[528]=99011,},{[553]=99108,[566]=99352,[540]=99611,[528]=98988,},{[553]=99109,[566]=99353,[540]=99612,[528]=98989,},{[553]=99152,[566]=99400,[540]=99658,[528]=99078,},{[553]=99153,[566]=99401,[540]=99659,[528]=99079,},{[553]=99160,[566]=99397,[540]=99575,[528]=99083,},{[553]=99161,[566]=99398,[540]=99576,[528]=99084,},{[553]=99162,[566]=99399,[540]=99657,[528]=99077,},{[553]=99096,[566]=99424,[540]=99567,[528]=99053,},{[553]=99097,[566]=99425,[540]=99568,[528]=99054,},{[553]=99098,[566]=99426,[540]=99569,[528]=99055,},{[553]=99204,[566]=99416,[540]=99570,[528]=99056,},{[553]=99205,[566]=99417,[540]=99601,[528]=99045,},{[553]=99142,[566]=99384,[540]=99607,[528]=99065,},{[553]=99143,[566]=99385,[540]=99606,[528]=99050,},{[553]=99144,[566]=99386,[540]=99565,[528]=99051,},{[553]=99140,[566]=99382,[540]=99643,[528]=99063,},{[553]=99141,[566]=99383,[540]=99644,[528]=99064,},{[553]=99154,[566]=99396,[540]=99555,[528]=99071,},{[553]=99155,[566]=99392,[540]=99556,[528]=99072,},{[553]=99156,[566]=99393,[540]=99653,[528]=99073,},{[553]=99145,[566]=99394,[540]=99654,[528]=99074,},{[553]=99146,[566]=99395,[540]=99655,[528]=99075,},{[553]=99151,[566]=99381,[540]=99642,[528]=99062,},{[553]=99147,[566]=99388,[540]=99552,[528]=99068,},{[553]=99148,[566]=99389,[540]=99553,[528]=99069,},{[553]=99149,[566]=99390,[540]=99554,[528]=99070,},{[553]=99150,[566]=99391,[540]=99641,[528]=99061,},{[553]=99163,[566]=99420,[540]=99623,[528]=99000,},{[553]=99164,[566]=99421,[540]=99624,[528]=99001,},{[553]=99165,[566]=99422,[540]=99610,[528]=98981,},{[553]=99166,[566]=99423,[540]=99664,[528]=98978,},{[553]=99170,[566]=99419,[540]=99622,[528]=98999,},{[553]=99180,[566]=99326,[540]=99632,[528]=99041,},{[553]=99181,[566]=99327,[540]=99633,[528]=99042,},{[553]=99182,[566]=99328,[540]=99599,[528]=99043,},{[553]=99183,[566]=99329,[540]=99600,[528]=99044,},{[553]=99184,[566]=99322,[540]=99589,[528]=99022,},{[553]=99169,[566]=99428,[540]=99621,[528]=98998,},{[553]=99174,[566]=99432,[540]=99617,[528]=98994,},{[553]=99175,[566]=99433,[540]=99618,[528]=98995,},{[553]=99176,[566]=99434,[540]=99619,[528]=98996,},{[553]=99177,[566]=99427,[540]=99620,[528]=98997,},{[553]=99171,[566]=99429,[540]=99581,[528]=99014,},{[553]=99172,[566]=99430,[540]=99582,[528]=99015,},{[553]=99173,[566]=99431,[540]=99583,[528]=99016,},{[553]=99178,[566]=99436,[540]=99638,[528]=99013,},{[553]=99185,[566]=99435,[540]=99637,[528]=99012,},},
}
]],
--> tokens
{[99715]=1,[99716]=1,[99714]=1,[99721]=1,[99722]=1,[99720]=1,[99724]=1,[99725]=1,[99723]=1,[99718]=1,[99719]=1,[99717]=1,[99712]=1,[99713]=1,[99726]=1,[105866]=1,[105867]=1,[105868]=1},
--> other
upgrade = true,
asia = true,
fourUpgrade = true,
classItems = {[99411]="WARRIOR", [99412]="WARRIOR", [99413]="WARRIOR", [99414]="WARRIOR", [99418]="WARRIOR", [99410]="WARRIOR", [99407]="WARRIOR", [99415]="WARRIOR", [99408]="WARRIOR", [99409]="WARRIOR", [99373]="PALADIN", [99387]="PALADIN", [99380]="PALADIN", [99379]="PALADIN", [99372]="PALADIN", [99368]="PALADIN", [99369]="PALADIN", [99370]="PALADIN", [99371]="PALADIN", [99364]="PALADIN", [99374]="PALADIN", [99377]="PALADIN", [99378]="PALADIN", [99375]="PALADIN", [99376]="PALADIN", [99402]="HUNTER", [99403]="HUNTER", [99404]="HUNTER", [99405]="HUNTER", [99406]="HUNTER", [99355]="ROGUE", [99356]="ROGUE", [99348]="ROGUE", [99349]="ROGUE", [99350]="ROGUE", [99361]="PRIEST", [99362]="PRIEST", [99363]="PRIEST", [99359]="PRIEST", [99360]="PRIEST", [99366]="PRIEST", [99367]="PRIEST", [99357]="PRIEST", [99358]="PRIEST", [99365]="PRIEST", [99338]="DEATHKNIGHT", [99339]="DEATHKNIGHT", [99335]="DEATHKNIGHT", [99336]="DEATHKNIGHT", [99337]="DEATHKNIGHT", [99325]="DEATHKNIGHT", [99330]="DEATHKNIGHT", [99331]="DEATHKNIGHT", [99323]="DEATHKNIGHT", [99324]="DEATHKNIGHT", [99347]="SHAMAN", [99340]="SHAMAN", [99341]="SHAMAN", [99342]="SHAMAN", [99343]="SHAMAN", [99345]="SHAMAN", [99332]="SHAMAN", [99333]="SHAMAN", [99334]="SHAMAN", [99344]="SHAMAN", [99354]="SHAMAN", [99346]="SHAMAN", [99351]="SHAMAN", [99352]="SHAMAN", [99353]="SHAMAN", [99400]="MAGE", [99401]="MAGE", [99397]="MAGE", [99398]="MAGE", [99399]="MAGE", [99424]="WARLOCK", [99425]="WARLOCK", [99426]="WARLOCK", [99416]="WARLOCK", [99417]="WARLOCK", [99384]="MONK", [99385]="MONK", [99386]="MONK", [99382]="MONK", [99383]="MONK", [99396]="MONK", [99392]="MONK", [99393]="MONK", [99394]="MONK", [99395]="MONK", [99381]="MONK", [99388]="MONK", [99389]="MONK", [99390]="MONK", [99391]="MONK", [99420]="DRUID", [99421]="DRUID", [99422]="DRUID", [99423]="DRUID", [99419]="DRUID", [99326]="DRUID", [99327]="DRUID", [99328]="DRUID", [99329]="DRUID", [99322]="DRUID", [99428]="DRUID", [99432]="DRUID", [99433]="DRUID", [99434]="DRUID", [99427]="DRUID", [99429]="DRUID", [99430]="DRUID", [99431]="DRUID", [99436]="DRUID", [99435]="DRUID", },
upgradeIndex = {491,492,493,493,504,505,498,506,507},
}

module.db.now = 2
module.db.itemListNow = 1
module.db.bossMax = 0
module.db.listMax = 36
module.db.bossNow = nil

function module.options:Load()
	for i=1,#module.db.base do
		loadstring(module.db.base[i][3])()
	end
	
	do
		local tabsNames ={}
		for i=1,#module.db.base do
			tabsNames[#tabsNames + 1] = module.db.base[i][1]
		end
		self.tab = ExRT.lib.CreateTabFrame(self:GetName().."Tab",self,603,527,10,-35,#module.db.base,module.db.now,unpack(tabsNames))
	end
	self.tab:SetBackdropColor(0,0,0,0)
	self.tab.t = self.tab:CreateTexture(nil, "BACKGROUND")
	self.tab.t:SetTexture(0.05, 0.05, 0.05, 0.9)
	self.tab.t:SetPoint("TOPLEFT",5,-5)
	self.tab.t:SetPoint("BOTTOMRIGHT",-5,5)

	for tier_num=#module.db.base,1,-1 do
		for boss_num,_ in pairs(module.db.base[tier_num][3]) do
			for item_slot,_ in pairs(module.db.base[tier_num][3][boss_num]) do
				if type(module.db.base[tier_num][3][boss_num][item_slot]) == "table" then
					for _,itemID in pairs(module.db.base[tier_num][3][boss_num][item_slot]) do
						GetItemInfo(itemID)
					end
				else
					GetItemInfo(module.db.base[tier_num][3][boss_num][item_slot])
				end
			end		
		end
	end

	for i=1,#module.db.base do
		module.db.bossMax = max(module.db.bossMax,#module.db.base[i][3])
	end

	self.item_selected = {}
	
	for iAsia=0,2 do 
		for iUpgrade=1,3 do
			for iDiff=1,6 do
				local index = (iUpgrade-1)*6 + iDiff + iAsia*18
				self.item_selected[index] = CreateFrame("Button", nil,self.tab)
				self.item_selected[index]:SetSize(40,20)
				self.item_selected[index]:SetPoint("TOPLEFT", 475 + (iUpgrade-1)*40, -65 - 20*(iDiff-1) - 140*iAsia)
				self.item_selected[index]:RegisterForClicks("LeftButtonDown")
				
				self.item_selected[index].text = ExRT.lib.CreateText(self.item_selected[index],40,20,nil,0,0,nil,"TOP",ExRT.mds.defFont,20,nil,nil,1,1,1,1)
				
				self.item_selected[index]:SetScript("OnClick", function(self) 
					ExRT.mds.LinkItem(nil,self.link2) 
				end)
				self.item_selected[index]:SetScript("OnEnter", function(self) 
					ExRT.lib.OnEnterHyperLinkTooltip(self,self.link2) 
				end)
				self.item_selected[index]:SetScript("OnLeave", function() 
					ExRT.lib.OnLeaveHyperLinkTooltip() 
				end)			
			end
		end 
	end
	
	self.item_selected.itemIcon = self.tab:CreateTexture(nil, "OVERLAY",nil,7)
	self.item_selected.itemIcon:SetTexture("Interface\\Icons\\INV_MISC_QUESTIONMARK")
	self.item_selected.itemIcon:SetSize(48,48)
	self.item_selected.itemIcon:SetPoint("TOPLEFT", self.tab,490,-10)
	
	local function setItemToFrame(self,hexColor,itemID,upgradeIndex,itemLevel,itemName)
		if not hexColor then
			self.text:SetText("")
			self.link = nil
			self.link2 = nil
		else
			local txt = format("|c"..hexColor.."|Hitem:%d:0:0:0:0:0:0:0:90:0:%d|h%s|h|r", itemID, upgradeIndex, itemLevel)
			self.text:SetText(txt)
			self.link = txt
			self.link2 = format("|c"..hexColor.."|Hitem:%d:0:0:0:0:0:0:0:90:0:%d|h[%s]|h|r", itemID, upgradeIndex, itemName)
		end
	end
	local function setWODItemToFrame(self,hexColor,itemID,upgradeIndex,itemLevel,itemName, ...)
		if not hexColor then
			self.text:SetText("")
			self.link = nil
			self.link2 = nil
		else
			local affixCount = select("#", ...)
			local affixes = ""
			for i=1,affixCount do
				local affix = select(i, ...)
				affixes = affixes .. ":" .. affix
			end
			local txt = format("|c"..hexColor.."|Hitem:%d:0:0:0:0:0:0:0:90:%d:0:%d%s|h%s|h|r", itemID, upgradeIndex, affixCount, affixes, itemLevel)
			--print(txt:gsub("|","||"))
			self.text:SetText(txt)
			self.link = txt
			self.link2 = format("|c"..hexColor.."|Hitem:%d:0:0:0:0:0:0:0:90:%d:0:%d%s|h[%s]|h|r", itemID, upgradeIndex, affixCount, affixes, itemName)
		end

	end
	
	local function selectItem(boss_num,item_num)
		local itemLevels = {}
		for itemLevel,_ in pairs(module.db.base[module.db.now][3][boss_num][item_num]) do 
			table.insert(itemLevels,itemLevel) 
		end 
		table.sort(itemLevels)
		for j=1,6*3*3 do
			setItemToFrame(self.item_selected[j])
		end
		
		for i=1,#itemLevels do
			local itemLevel = itemLevels[i]
			local itemID = module.db.base[module.db.now][3][boss_num][item_num][itemLevel]
			local itemName,itemLink,itemQuality = GetItemInfo(itemID)
			itemName = itemName or "?"
			itemQuality = itemQuality or 4
			local itemIcon = GetItemIcon(itemID)
			module.options.item_selected.itemIcon:SetTexture(itemIcon)
			local hexColor = select(4,GetItemQualityColor(itemQuality))
			local upgradeIndex = module.db.base[module.db.now].upgradeIndex and module.db.base[module.db.now].upgradeIndex[1] or 0
			local showUpgrade = module.db.base[module.db.now].upgrade
			local showAsia = module.db.base[module.db.now].asia
			local fourUpgrade = module.db.base[module.db.now].fourUpgrade
			
			local isHeirloomFix = nil
			if itemLevel == 548 or itemLevel == 561 or itemLevel == 574 then --Garrosh Heirloom fix
				upgradeIndex = 0 
				hexColor = select(4,GetItemQualityColor(7)) 
				showUpgrade = false
				isHeirloomFix = true
				showAsia = false
				
				if fourUpgrade then
					itemLevel = itemLevel + 8
				end
				fourUpgrade = false
			end
			
			do
				local isTokenT16 = module.db.base[module.db.now][3][boss_num][item_num][566]
				local isTokenT15 = module.db.base[module.db.now][3][boss_num][item_num][535]
				if (isTokenT16 and module.db.base[module.db.now][4][isTokenT16]) or (isTokenT15 and module.db.base[module.db.now][4][isTokenT15]) then 
					showUpgrade = false 
					fourUpgrade = false
					showAsia = false
					upgradeIndex = 0 
				end
			
			end
			
			setItemToFrame(self.item_selected[i],hexColor,itemID,upgradeIndex,itemLevel,itemName)
			if showUpgrade then
				setItemToFrame(self.item_selected[i+6],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[2],itemLevel+4,itemName)
				setItemToFrame(self.item_selected[i+12],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[3],itemLevel+8,itemName)

				if showAsia then
					setItemToFrame(self.item_selected[i+24],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[5],itemLevel+12,itemName)
					setItemToFrame(self.item_selected[i+30],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[6],itemLevel+16,itemName)				
				end
			end
			if showAsia then
				setItemToFrame(self.item_selected[i+18],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[4],itemLevel+8,itemName)
			end
			
			if fourUpgrade then
				setItemToFrame(self.item_selected[i+36],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[7],itemLevel+16,itemName)
				if showUpgrade then
					setItemToFrame(self.item_selected[i+42],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[8],itemLevel+20,itemName)
					setItemToFrame(self.item_selected[i+48],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[9],itemLevel+24,itemName)
				end
			end
			
			if isHeirloomFix then
				--setItemToFrame(self.item_selected[i+18],hexColor,itemID,496,itemLevel+8,itemName)
			end
		end
	end
	
	local function selectWODItem(boss_num,item_num)
		for j=1,6*3*3 do
			setWODItemToFrame(self.item_selected[j])
		end
		local WODilvlDiffTable = module.db.base[module.db.now].diffTable
		local WODaffixTable = module.db.base[module.db.now].affixTable
		local itemID = module.db.base[module.db.now][3][boss_num][item_num]
		local itemName,_,itemQuality = GetItemInfo(itemID)
		local itemIcon = GetItemIcon(itemID)
		itemName = itemName or "?"
		itemQuality = itemQuality or 4
		module.options.item_selected.itemIcon:SetTexture(itemIcon)
		local hexColor = select(4,GetItemQualityColor(itemQuality))
		for i=1,#WODilvlDiffTable do
			local itemLevel = module.db.base[module.db.now].baseIlvl + WODilvlDiffTable[i]
			
			local upgradeIndex = module.db.base[module.db.now].upgradeIndex and module.db.base[module.db.now].upgradeIndex[1] or 0
			
			local showUpgrade = module.db.base[module.db.now].upgrade
			local showAsia = module.db.base[module.db.now].asia
			local fourUpgrade = module.db.base[module.db.now].fourUpgrade
			
			setWODItemToFrame(self.item_selected[i],hexColor,itemID,upgradeIndex,itemLevel,itemName, unpack(WODaffixTable[i]))
			if showUpgrade then
				setWODItemToFrame(self.item_selected[i+6],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[2],itemLevel+4,itemName, unpack(WODaffixTable[i]))
				setWODItemToFrame(self.item_selected[i+12],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[3],itemLevel+8,itemName, unpack(WODaffixTable[i]))

				if showAsia then
					setWODItemToFrame(self.item_selected[i+24],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[5],itemLevel+12,itemName, unpack(WODaffixTable[i]))
					setWODItemToFrame(self.item_selected[i+30],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[6],itemLevel+16,itemName, unpack(WODaffixTable[i]))				
				end
			end
			if showAsia then
				setWODItemToFrame(self.item_selected[i+18],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[4],itemLevel+8,itemName, unpack(WODaffixTable[i]))
			end
			
			if fourUpgrade then
				setWODItemToFrame(self.item_selected[i+36],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[7],itemLevel+16,itemName, unpack(WODaffixTable[i]))
				if showUpgrade then
					setWODItemToFrame(self.item_selected[i+42],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[8],itemLevel+20,itemName, unpack(WODaffixTable[i]))
					setWODItemToFrame(self.item_selected[i+48],hexColor,itemID,module.db.base[module.db.now].upgradeIndex[9],itemLevel+24,itemName, unpack(WODaffixTable[i]))
				end
			end
		end
	end
	
	self.items = {}
	self.items_count = 0
	for i=1,module.db.listMax do
		self.items[i] = CreateFrame("Button", nil,self.tab)
		self.items[i]:SetSize(300-16,14)
		self.items[i]:SetPoint("TOPLEFT", 170,-10-14*(i-1))
		self.items[i]:SetBackdrop({bgFile = "Interface/Tooltips/UI-Tooltip-Background"})
		self.items[i]:SetBackdropColor(1,1,1,0)
		self.items[i].h = ExRT.lib.CreateText(self.items[i],300,14,nil,0,0,nil,"TOP",ExRT.mds.defFont,12,nil,nil,1,1,1,1)

		self.items[i].hm = 0
	
		self.items[i]:SetScript("OnEnter",function(self) 
			if module.options.items[i].hm ~=1 then 
				return 
			end
			self:SetBackdropColor(1,1,1,0.8)
			ExRT.lib.OnEnterHyperLinkTooltip(self,self.link)
		end)
		self.items[i]:SetScript("OnLeave", function(self)    
			self:SetBackdropColor(1,1,1,0)
			ExRT.lib.OnLeaveHyperLinkTooltip()
		end)
		
		self.items[i].it = self.items[i]:CreateTexture(nil, "BACKGROUND")
		self.items[i].it:SetTexture("")
		self.items[i].it:SetSize(14,14)
		self.items[i].it:SetPoint("LEFT",-16,0)
		
		self.items[i].classColor = self.items[i]:CreateTexture(nil, "BACKGROUND")
		self.items[i].classColor:SetTexture(1,1,1,1)
		self.items[i].classColor:SetAllPoints()
		self.items[i].classColor:SetGradientAlpha("HORIZONTAL", 0, 0, 0, 0, 0, 0, 0, 0)
	end
	
	local function ReloadLootList(clearPage)
		local i = module.db.bossNow
		local count = 0
		if not clearPage then
			local isWOD = module.db.now > 2
			for j = module.db.itemListNow, #module.db.base[module.db.now][3][i] do
				if not module.db.base[module.db.now][3][i][j] then 
					break 
				end
				count = count + 1
				
				local itemid = 0
				local mxLvl = 0
				if not isWOD then
					for j2, val2 in pairs(module.db.base[module.db.now][3][i][j]) do
						if j2 > mxLvl then
							mxLvl = j2
							itemid = val2 
						end
					end
				else
					itemid = module.db.base[module.db.now][3][i][j]
					mxLvl = module.db.base[module.db.now].baseIlvl
				end
				local itemName, _, itemQuality = GetItemInfo(itemid)
				local itemicon = GetItemIcon(itemid)
				if not itemName then 
					itemName, _, itemQuality = GetItemInfo(itemid)
					itemName = "?" itemQuality = 4
				end
	
				local hexColor = select(4,GetItemQualityColor(itemQuality))
				if type(module.db.base[module.db.now][3][i][j])=="table" and module.db.base[module.db.now][3][i][j][574] then 
					hexColor = select(4,GetItemQualityColor(7)) 	--Garrosh Heirloom fix
				end
				local txt = ("|c"..hexColor.."|Hitem:%d:0:0:0:0:0:0:0:0|h%s|h|r"):format(itemid, itemName)
				module.options.items[count].link = txt
	
				module.options.items[count].h:SetText(txt)
				module.options.items[count].it:SetTexture(itemicon)	
	
				module.options.items[count]:SetScript("OnClick", function() 
					selectItem(i,j) 
				end)
				if isWOD then
					module.options.items[count]:SetScript("OnClick", function() 
						selectWODItem(i,j) 
					end)
				end
				module.options.items[count].hm = 1
				
				local classItems = module.db.base[module.db.now].classItems
				if classItems and classItems[itemid] then
					local cR,cG,CB = ExRT.mds.classColorNum(classItems[itemid])
					module.options.items[count].classColor:SetGradientAlpha("HORIZONTAL", cR,cG,CB, 0, cR,cG,CB, 0.5)
					module.options.items[count].h:SetShadowColor(0,0,0,0.5)
				else
					module.options.items[count].classColor:SetGradientAlpha("HORIZONTAL", 0,0,0,0, 0,0,0,0)
					module.options.items[count].h:SetShadowColor(0,0,0,1)
				end
				
				if count >= module.db.listMax then
					break
				end
			end
		end
		for j=(count+1),module.db.listMax do
			module.options.items[j].h:SetText("")
			module.options.items[j].it:SetTexture("")
			module.options.items[j]:SetScript("OnClick", nil)
			module.options.items[j].link = nil
			module.options.items[j].hm = 0
			module.options.items[j].classColor:SetGradientAlpha("HORIZONTAL", 0,0,0,0, 0,0,0,0)
		end
	end
	
	self.boss = {}
	for i=1,module.db.bossMax do
		self.boss[i] = CreateFrame("Button", nil,self.tab)
		self.boss[i]:SetSize(140,14)
		self.boss[i]:SetPoint("TOPLEFT", 10,-10-14*(i-1))
	
		self.boss[i].h = ExRT.lib.CreateText(self.boss[i],140,14,nil,0,0,nil,"TOP",ExRT.mds.defFont,14,module.db.base[module.db.now][2][i],nil,1,1,1,1)

		self.boss[i]:RegisterForClicks("LeftButtonDown")
		self.boss[i]:SetScript("OnClick", function(self)
			module.db.bossNow = i
			module.options.items_count = 0
			
			module.db.scrollFix = true
			module.options.ScrollBar:SetValue(1)
			module.db.scrollFix = nil
			module.options.ScrollBar:SetMinMaxValues(1,max(#module.db.base[module.db.now][3][i] - module.db.listMax + 1,1))
			ExRT.lib.ShowOrHide(module.options.ScrollBar,not (#module.db.base[module.db.now][3][i] - module.db.listMax <= 1))
			module.db.itemListNow = 1			

			for j=1,module.db.bossMax do
				module.options.boss[j].h:SetTextColor(1,1,1,1)
			end
			module.options.boss[module.db.bossNow].h:SetTextColor(0.7,1,0.7,1)
			
			module.options:RegisterEvent("GET_ITEM_INFO_RECEIVED")
			if module.options.GET_ITEM_INFO_RECEIVED_cancel then
				ExRT.mds.CancelTimer(module.options.GET_ITEM_INFO_RECEIVED_cancel)
			end
			module.options.GET_ITEM_INFO_RECEIVED_cancel = ExRT.mds.ScheduleTimer(function ()
				module.options.GET_ITEM_INFO_RECEIVED_cancel = nil
				module.options:UnregisterEvent("GET_ITEM_INFO_RECEIVED")
			end, 5)
			
			ReloadLootList()
		end)
	
		self.boss[i]:SetScript("OnEnter",function(self) 
			self:SetBackdropColor(1,1,1,0.7)
		end)
		self.boss[i]:SetScript("OnLeave", function(self)    
			self:SetBackdropColor(1,1,1,0)
		end)

		self.boss[i]:SetBackdrop({bgFile = "Interface/Tooltips/UI-Tooltip-Background"})
		self.boss[i]:SetBackdropColor(1,1,1,0)
	end
	
	self:SetScript("OnEvent",function ()
		if not self.GET_ITEM_INFO_RECEIVED then
			self.GET_ITEM_INFO_RECEIVED = ExRT.mds.ScheduleTimer(function() 
				self.GET_ITEM_INFO_RECEIVED = nil
				ReloadLootList() 
			end, 0.1)
		end
	end)

	local function setTierTab(i)
		module.db.now = i
		for i1=1,#module.db.base[module.db.now][2] do
			self.boss[i1].h:SetText(module.db.base[module.db.now][2][i1])
			self.boss[i1].h:SetTextColor(1,1,1,1)
			self.boss[i1]:Show()
		end
		for i1=#module.db.base[module.db.now][2]+1,module.db.bossMax do
			self.boss[i1]:Hide()
		end

		ReloadLootList(true)
		self.ScrollBar:Hide()	  
	end

	for i=1,#module.db.base do
		self.tab.tabs[i].button:SetScript("OnClick", function(s)
			for j=1,#module.db.base do
				if j ~= s.id then
					PanelTemplates_DeselectTab(module.options.tab.tabs[j].button)
				else
					PanelTemplates_SelectTab(module.options.tab.tabs[j].button)
				end
			end
			setTierTab(i)
		end)
	end
	
	self.ScrollBar = ExRT.lib.CreateScrollBar2(self:GetName().."ScrollBar",self.tab,16,505,455,-10,1,2)
	self.ScrollBar:SetScript("OnUpdate",self.ScrollBar.reButtonsState)
	self.ScrollBar:SetScript("OnValueChanged",function (self,val)
		if module.db.scrollFix then
			return
		end
		val = ExRT.mds.Round(self:GetValue())
		module.db.itemListNow = val
		GameTooltip_Hide()
		ReloadLootList()
	end)
	self.ScrollBar:Hide()
	
	self.tab:SetScript("OnMouseWheel",function (self,delta)
		if not module.options.ScrollBar:IsShown() then
			return
		end
		if delta > 0 then
			module.options.ScrollBar.buttonUP:Click("LeftButton")
		else
			module.options.ScrollBar.buttonDown:Click("LeftButton")
		end
	end)
	setTierTab(module.db.now)
end

function module.main:ADDON_LOADED()
end